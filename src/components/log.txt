import { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { fetchRentals } from "../../features/Cars/CarsSlice"; // Assuming you have this action in CarsSlice

import { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from "../../components/Home/table";
import { Badge } from "../../components/Home/badge";
import { Skeleton } from "../../components/Home/skeleton";
import { motion } from "framer-motion";

const Rentals = () => {
  const dispatch = useDispatch();
  const { rentals, loading } = useSelector((state) => state.carRental);

  useEffect(() => {
    dispatch(fetchRentals());
  }, [dispatch]);

  return (
    <motion.div
      className="p-6 bg-white rounded-2xl shadow-xl"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
    >
      <h2 className="text-xl font-semibold mb-4">Liste des Locations</h2>
      <div className="overflow-x-auto">
        <Table className="w-full text-sm border rounded-lg">
          <TableHeader>
            <TableRow className="bg-gray-100">
              <TableHead>ID</TableHead>
              <TableHead>Voiture</TableHead>
              <TableHead>Début</TableHead>
              <TableHead>Fin</TableHead>
              <TableHead>Ville</TableHead>
              <TableHead>Prix Total</TableHead>
              <TableHead>Statut</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {loading
              ? Array(5).fill(0).map((_, index) => (
                  <TableRow key={index}>
                    <TableCell><Skeleton className="h-4 w-16" /></TableCell>
                    <TableCell><Skeleton className="h-4 w-24" /></TableCell>
                    <TableCell><Skeleton className="h-4 w-20" /></TableCell>
                    <TableCell><Skeleton className="h-4 w-20" /></TableCell>
                    <TableCell><Skeleton className="h-4 w-24" /></TableCell>
                    <TableCell><Skeleton className="h-4 w-16" /></TableCell>
                    <TableCell><Skeleton className="h-4 w-20" /></TableCell>
                  </TableRow>
                ))
              : rentals.map((rental) => (
                  <TableRow key={rental.id} className="hover:bg-gray-50">
                    <TableCell>{rental.id}</TableCell>
                    <TableCell>{rental.car.brand} {rental.car.model}</TableCell>
                    <TableCell>{rental.start_date}</TableCell>
                    <TableCell>{rental.end_date}</TableCell>
                    <TableCell>{rental.location_city}</TableCell>
                    <TableCell>{rental.total_price}€</TableCell>
                    <TableCell>
                      <Badge className={rental.is_valid ? "bg-green-500" : "bg-red-500"}>
                        {rental.is_valid ? "Validée" : "En attente"}
                      </Badge>
                    </TableCell>
                  </TableRow>
                ))}
          </TableBody>
        </Table>
      </div>
    </motion.div>
  );
};

export default Rentals;
